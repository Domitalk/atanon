{"version":3,"sources":["components/Header.js","components/Post.js","containers/PostContainer.js","components/NewPost.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","styles","useGradientBtnStyles","theme","createMuiTheme","typography","htmlFontSize","className","position","Button","classes","variant","color","aria-controls","aria-haspopup","ThemeProvider","exact","to","style","textDecoration","Typography","useStylesStag","makeStyles","margin","spacing","useStylesForm","root","width","useStyles","maxWidth","borderRadius","content","padding","title","letterSpacing","textShadow","likes","Post","mediaStyles","useCoverCardMediaStyles","shadowStyles","useBouncyShadowStyles","useState","isFlipped","setIsFlipped","classesForm","formField","setFormField","classesStag","handleClick","number","post","id","addReaction","post_id","rtype","handleDoubleClick","submitNewTag","event","addTagToPost","alert","flipDirection","infinite","Card","key","cx","CardMedia","image","image_url","CardActionArea","CardContent","onDoubleClick","Box","display","flexDirection","alignItems","justifyContent","minHeight","textAlign","comment","CardActions","value","size","name","onClick","heart","smile","sad","angry","Object","keys","stags","map","direction","autoComplete","TextField","label","defaultValue","onChange","target","onKeyPress","preventDefault","Tooltip","flexGrow","paper","palette","text","secondary","progressRoot","marginTop","PostContainer","pageStart","loadMore","fetchMorePosts","hasMore","loader","LinearProgress","useWindow","Grid","container","posts","item","xs","sm","md","lg","useStylesButton","useStylesCard","NewPost","classesCard","classesButton","setImage_url","setComment","handleChange","handleSubmit","length","fetch","method","headers","body","JSON","stringify","then","r","json","addPostToFrontOfArray","history","push","widget","window","cloudinary","createUploadWidget","cloudName","uploadPreset","error","result","checkUploadResult","resultEvent","errorEvent","console","log","info","secure_url","justify","onSubmit","noValidate","type","multiline","rows","align","open","fabButton","zIndex","top","right","modal","backgroundColor","background","border","boxShadow","shadows","outline","App","chubbyStyles","chubby","setOpen","setPosts","newComment","updatedPost","index","findIndex","slice","useEffect","setTimeout","newPost","handleClose","newTag","stagname","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","path","render","Fab","aria-label","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dfbd5d2e.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button';\n// import Menu from '@material-ui/core/Menu';\n// import MenuItem from '@material-ui/core/MenuItem';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { useGradientBtnStyles } from '@mui-treasury/styles/button/gradient';\n\nfunction Header (props) {\n    const styles = useGradientBtnStyles();\n\n    const theme = createMuiTheme({\n        typography: {\n          // Tell Material-UI what the font-size on the html element is.\n          htmlFontSize: 8,\n        },\n    });\n\n    // toggle header menu \n    // const [anchorEl, setAnchorEl] = React.useState(null);\n    \n    // const handleClick = event => {\n    //     setAnchorEl(event.currentTarget);\n    // };\n    \n    // const handleClose = () => {\n    //     setAnchorEl(null);\n    // };\n\n    return (\n        <div  className=\"header\" position=\"fixed\"  >\n            <Button classes={styles} variant={'outlined'} color={'primary'} className=\"logo\" aria-controls=\"simple-menu\" aria-haspopup=\"true\"  >\n                <ThemeProvider  theme={theme}>\n                    <Link exact to=\"/atanon\" style={{ textDecoration: 'inherit', color: 'inherit'}}>\n                        <Typography>@ANON</Typography>\n                    </Link>\n                </ThemeProvider>\n            </Button>\n            {/* <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n                \n            >\n            <MenuItem onClick={handleClose}><NavLink  \n                style={{\n                    textDecoration: \"non\"\n                }} \n                activeStyle={{\n                    textDecoration: \"none\",\n                    fontWeight: \"bold\",\n                    color: \"black\"\n                }} exact to=\"/atanon/\"> HOME \n            </NavLink></MenuItem>\n            <MenuItem onClick={handleClose}><NavLink \n                style={{\n                    textDecoration: \"non\"\n                }}\n                activeStyle={{\n                    textDecoration: \"none\",\n                    fontWeight: \"bold\",\n                    color: \"black\"\n                }}\n                exact to=\"/atanon/post\"> UPLOAD \n            </NavLink></MenuItem> */}\n            {/* </Menu> */}\n        </div>\n    )\n\n}\n\nexport default Header ","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport cx from 'clsx';\nimport Box from '@material-ui/core/Box';\nimport { useCoverCardMediaStyles } from '@mui-treasury/styles/cardMedia/cover';\nimport { useBouncyShadowStyles } from \"@mui-treasury/styles/shadow/bouncy\";\nimport ReactCardFlip from 'react-card-flip';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport TextField from '@material-ui/core/TextField';\nimport CreateIcon from '@material-ui/icons/Create';\n\nconst useStylesStag = makeStyles(theme => ({\n    margin: {\n      margin: theme.spacing(1),\n    }\n}))\n\nconst useStylesForm = makeStyles(theme => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: 'none', \n        width: 200,\n      },\n    },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 304,\n      margin: 'auto',\n      borderRadius: 10,\n      position: 'relative',\n    },\n    content: {\n      padding: 24,\n    },\n    title: {\n      color: '#fff',\n      letterSpacing: '2px',\n      textShadow: \"#260C0C 1px 0 10px\", \n    },\n    likes: {\n        color: '#fff',\n        letterSpacing: '2px',\n        textShadow: \"#260C0C 1px 0 10px\", \n    },\n}));\n\n\nconst Post = (props) => {\n    \n    const styles = useStyles();\n    const mediaStyles = useCoverCardMediaStyles();\n    const shadowStyles = useBouncyShadowStyles();\n\n    const [isFlipped, setIsFlipped] = useState(false)\n\n    const classesForm = useStylesForm();\n\n    const [formField, setFormField] = useState(\"\")\n\n    const classesStag = useStylesStag();\n\n    // create a reaction \n    const handleClick = (number) => {\n        // console.log(number)\n        // setEmotion(number)\n        if (props.post.id) {\n            props.addReaction({\n                post_id: props.post.id, \n                rtype: number\n            })\n        }\n    }\n\n    // flip the card back and forth so you can add tags on the back\n    const handleDoubleClick = () => {\n        setIsFlipped(!isFlipped)\n    }\n\n    // controlled form \n    const handleFormChange = (event) => {\n        setFormField(event.target.value)\n    }\n    // check for 'ENTER'\n    const catchReturn = (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault() \n            submitNewTag()\n        }\n    }\n\n    // create new tag \n    const submitNewTag = (event) => {\n        if (props.post.id) {\n            props.addTagToPost(formField, props.post.id)\n            setFormField(\"\")\n        } else {\n            alert(\"You cannot add tags until you finish creating the post!\")\n        }\n    }\n\n    // show all the search tags as buttons \n    const showAllStags = () => {\n        // console.log(Object.keys(props.post.stags))\n        let stagkeys = Object.keys(props.post.stags)\n        return stagkeys.map( key => {\n            return <Button className={classesStag.margin} color='secondary' size=\"large\" variant={'outlined'}><span className={styles.likes}>{key}</span></Button>\n        })\n    }\n\n\n\n    return (\n        <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\" infinite=\"true\" >\n            <Card key=\"front\" variant=\"outlined\"  className={cx(styles.root, shadowStyles.root)}>\n                <CardMedia \n                    classes={mediaStyles} \n                    image={props.post.image_url}\n                />\n                <CardActionArea>\n                    <CardContent onDoubleClick={handleDoubleClick} className={styles.content} >\n                        \n                        <Box\n                            display={'flex'}\n                            flexDirection={'column'}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                            minHeight={360}\n                            color={'common.white'}\n                            textAlign={'center'}\n                        >\n                            <h1 className={styles.title}>{props.post.comment}</h1>\n                        </Box>\n                    </CardContent>\n                </CardActionArea>\n                <CardActions className=\"reactionBox\" >\n                    <Button variant={'outlined'} color={'secondary'} className=\"order\" value=\"1\" size=\"small\" name=\"1\" onClick={() => handleClick(1)}>\n                        <span className={styles.likes}>{props.post.heart}</span> ❤️\n                    </Button>\n                    <Button variant={'outlined'} color={'secondary'} className=\"order\" size=\"small\" name=\"2\" onClick={() => handleClick(2)}>\n                        <span className={styles.likes}>{props.post.smile}</span> 😊\n                    </Button>\n                    <Button variant={'outlined'} color={'secondary'} className=\"order\" size=\"small\" name=\"3\" onClick={() => handleClick(3)}>\n                        <span className={styles.likes}>{props.post.sad}</span> 😔\n                    </Button>\n                    <Button variant={'outlined'} color={'secondary'} className=\"order\" size=\"small\" name=\"4\" onClick={() => handleClick(4)}>\n                        <span className={styles.likes}>{props.post.angry}</span> 😠\n                    </Button>\n                </CardActions> \n            </Card>\n        \n            <Card key=\"back\" className={cx(styles.root, shadowStyles.root)}>\n                <CardMedia \n                    classes={mediaStyles} \n                    image={props.post.image_url}\n                />\n                <CardActionArea>\n                    <CardContent onDoubleClick={handleDoubleClick} className={styles.content}>\n                        <Box\n                            display={'flex'}\n                            flexDirection={'column'}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                            minHeight={360}\n                            color={'common.white'}\n                            textAlign={'center'}\n                            className={classesStag.root}\n                        >\n                            {/* <div className={classesStag.root}> */}\n                                <h3 className={styles.title}>{showAllStags()}</h3>\n                            {/* </div> */}\n                        </Box>\n                    </CardContent>\n                </CardActionArea>\n                <CardActions direction='' className=\"reactionBox\" >\n                    <form className={classesForm.root} autoComplete=\"on\" >\n                        <TextField\n                            label=\"new tag\"\n                            defaultValue=\"\"\n                            name=\"New Tag Field\"\n                            variant=\"standard\"\n                            color=\"secondary\"\n                            size=\"small\"\n                            onChange={handleFormChange}\n                            value={formField}\n                            onKeyPress={catchReturn}\n                        />\n                    </form>\n                    <Tooltip title=\"Create New Tag\">\n                        <Button size=\"small\" variant={'outlined'} color={'secondary'} onClick={submitNewTag}><CreateIcon color=\"secondary\" /></Button> \n                    </Tooltip>\n                </CardActions>\n            </Card>\n        </ReactCardFlip>\n\n    )\n}\n\nexport default Post ","import React from 'react'\nimport Post from '../components/Post'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n      spacing: 8,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n    progressRoot: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n      },\n  \n  }));\n\nconst PostContainer = (props) => {\n    const classes = useStyles();\n\n    // render all the items in posts \n    const mapAllPosts = () => {\n        // console.log(props)\n        return props.posts.map((post) => {\n            return (\n                <Grid item xs={12} sm={6} md={4} lg={4}  >\n                    <Post className={classes.paper} key={post.id} post={post} addReaction={props.addReaction} addTagToPost={props.addTagToPost} />\n                </Grid>\n            )\n        })\n    }\n\n    return (\n        <div className={classes.root} className=\"spaced\" >\n            <InfiniteScroll\n                pageStart={0}\n                loadMore={props.fetchMorePosts}\n                hasMore={true || false}\n                loader={<div className=\"loader\" key={0}> <br></br><LinearProgress color=\"secondary\" /><br></br></div>}\n                useWindow={false}\n            >\n                <Grid container spacing={4} >\n                    {mapAllPosts()}\n                </Grid>\n            </InfiniteScroll>\n        </div>\n    )\n\n}\n\nexport default PostContainer \n","import React, { useState } from 'react'\nimport Post from '../components/Post'\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport { useGradientBtnStyles } from '@mui-treasury/styles/button/gradient';\nimport Box from '@material-ui/core/Box';\n\n\nconst useStylesButton = makeStyles(theme => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n  }));\n\nconst useStylesCard = makeStyles({\n    root: {\n      maxWidth: '70vw',\n    },\n  });\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n    },\n}));\n\nconst useStylesForm = makeStyles(theme => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '67vw'\n      },\n    },\n  }));\n\n\nconst NewPost = (props) => {\n    const classes = useStyles();\n    const classesForm = useStylesForm();\n    const classesCard = useStylesCard();\n    const classesButton = useStylesButton();\n\n\n    // controlled form fields\n    const [image_url, setImage_url] = useState(\"\")\n    const [comment, setComment] = useState(\"\")\n\n    const styles = useGradientBtnStyles();\n\n\n    // object to be sent to front of main state so image shows up immediately\n    let post = {\n        image_url, \n        comment\n    }\n\n    // controlled form handler\n    const handleChange = (event) => {\n        if (event.target.name === \"image_url\") {\n            setImage_url(event.target.value)\n        } else if (event.target.name === \"comment\") {\n            setComment(event.target.value)\n        }\n    }\n\n    // fetch to create new post\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        // console.log(event)\n        // for some reason the upload widget is setting off a submit so check for fields\n        if (comment.length > 1 && image_url.length > 1) {\n            fetch('https://atanon-api.herokuapp.com/posts', {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    image_url,\n                    comment\n                })\n            })\n            .then(r => r.json())\n            .then((json) => {\n                setImage_url(\"\")\n                setComment(\"\")\n                // console.log(\"create new post\")\n                // console.log(\"after post json\", json)\n                props.addPostToFrontOfArray(json)\n                // redirect to main page when upload finished\n                props.history.push('/atanon/');\n            })\n        }\n    }\n\n    // image upload widget\n    let widget = window.cloudinary.createUploadWidget({ \n        cloudName: \"dwazq8zps\", \n        uploadPreset: \"zvziodpl\" }, \n        (error, result) => { \n            // console.log(\"result event\", result)\n            // console.log(\"error event\", error)\n            checkUploadResult(result, error)\n        });\n\n    // to render the widget \n    const showWidget = () => {\n        widget.open()\n    }\n\n    // a check on whether the widget uploaded image\n    const checkUploadResult = (resultEvent, errorEvent) => {\n        if (resultEvent.event === 'success') {\n            console.log(\"photo url\", resultEvent.info.secure_url)\n            setImage_url(`${resultEvent.info.secure_url}`)\n        }\n        // use the hook to setImage_url \n    }\n\n    return(\n        <div className=\"spaced\" className={classes.root}>\n            <br></br>\n            <Grid container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={9}\n            > \n                <Grid item>\n                    <br></br>\n                    <h1></h1>\n                    <br></br>\n                    <Post post={post} /> \n                </Grid>\n                <Grid item >\n                    <Card className={classesCard.root}>\n                        <form className={classesForm.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n                            {/* <h3>Image URL </h3> */}\n                            {/* <input type=\"url\" name=\"image_url\" value={image_url} onChange={handleChange} /> */}\n                            <TextField \n                                label=\"Image URL\"\n                                type=\"url\"\n                                name=\"image_url\"\n                                value={image_url}\n                                onChange={handleChange}\n                                variant=\"filled\"\n                                />\n                            {/* <h3>Or Upload</h3> */}\n                            <TextField \n                                label=\"Comment\"\n                                multiline\n                                type=\"text\"\n                                name=\"comment\"\n                                rows=\"5\"\n                                value={comment}\n                                onChange={handleChange}\n                                variant=\"filled\"\n                            />\n                            {/* <h3>Comment</h3>\n                            <textarea name=\"comment\" value={comment} onChange={handleChange} /> */}\n                            {/* <br></br> */}\n                            <Box align=\"center\" className={classesButton.root} >\n                                <Button onClick={showWidget} classes={styles}>Upload Your Own Photo</Button>\n                                {/* <button onClick={showWidget}>Upload Your Own Photo</button> */}\n                                <Button onClick={handleSubmit} classes={styles}>Submit Your Post</Button>\n                            {/* <input type=\"submit\" /> */}\n                            </Box>\n                        </form>\n                    </Card>\n                </Grid>\n            </Grid>\n        </div>\n    )\n\n}\n\nexport default NewPost\n\n","import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport Header from './components/Header'\nimport PostContainer from './containers/PostContainer'\nimport { BrowserRouter as Router, Route, NavLink} from 'react-router-dom'\nimport NewPost from './components/NewPost'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useGradientBtnStyles } from '@mui-treasury/styles/button/gradient';\nimport {Fade, Fab, Backdrop, Modal} from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add';\nimport { useTagCardStyles } from '@mui-treasury/styles/cardContent/tag';\n\nconst useStyles = makeStyles(theme => ({\n  fabButton: {\n    position: 'fixed',\n    zIndex: 1,\n    top: '85vh',\n    right: '5vw',\n    margin: '0 auto',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #ff8a65',\n    boxShadow: theme.shadows[0],\n    padding: theme.spacing(2, 4, 3),\n    outline: 0\n  },\n}));\n\nfunction App(props) {\n\n  // make the button rounded gradient\n  const chubbyStyles = useGradientBtnStyles({ chubby: true });\n\n  // variable for introduction modal \n  const [open, setOpen] = useState(true);\n  const classes = useStyles();\n\n  // main collection of posts\n  const [posts, setPosts] = useState([])\n\n  // pass down method in order to create reaction \n  const addReaction = (newComment) => {\n    fetch(`https://atanon-api.herokuapp.com/reactions`, {\n        method: 'POST', \n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newComment)\n    })\n    .then(r => r.json())\n    .then((updatedPost) => {\n        let index = posts.findIndex(post => post.id === updatedPost.id)\n        setPosts([...posts.slice(0, index), updatedPost, ...posts.slice(index + 1)])\n    })\n  }\n\n  // componentDidMount, fetch of data for initial rendering on homepage\n  useEffect(() => {\n    // console.log(\"Startup\")\n    fetch('https://atanon-api.herokuapp.com/posts')\n    .then(r => r.json())\n    .then((json) => {\n        setPosts(json)\n    })\n  }, [])\n  \n  // infinitescroll fetch more posts, pass down to PostContainer\n  const fetchMorePosts = () => {\n    // console.log(\"fetchmoreposts\")\n    if (posts.length > 0) {\n        setTimeout(() => {\n            fetch(`https://atanon-api.herokuapp.com/posts/${posts[posts.length - 1].id}`)\n            .then(r => r.json())\n            .then((json) => {\n                console.log(json)\n                setPosts([\n                    ...posts,\n                    ...json\n                ])\n            })\n        }, 2000)\n    }   \n  }\n  // pass down to NewPost\n  // when creating new post, add to front of collection so it renders first\n  const addPostToFrontOfArray = (newPost) => {\n    setPosts([\n        newPost,\n        ...posts\n    ])\n  }\n\n  // handle closing introduction modal \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // Add a tag to a Post \n  const addTagToPost = (newTag, post_id) => {\n    fetch(`https://atanon-api.herokuapp.com/stags`, {\n      method: 'POST', \n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        post_id: post_id, \n        stagname: newTag\n      })\n    })\n    .then(r => r.json())\n    .then((updatedPost) => {\n      let index = posts.findIndex(post => post.id === updatedPost.id)\n      setPosts([...posts.slice(0, index), updatedPost, ...posts.slice(index + 1)])\n    })\n  }\n\n  return (\n    <Router>\n      <div className=\"App\" >\n        <Header />\n        <Modal\n          aria-labelledby=\"transition-modal-title\"\n          aria-describedby=\"transition-modal-description\"\n          className={classes.modal}\n          open={open}\n          onClose={handleClose}\n          closeAfterTransition\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 500,\n          }}\n        >\n          <Fade in={open}>\n            <div className={classes.paper} onClick={handleClose} >\n              <h2 id=\"transition-modal-title\">Welcome to @ANON</h2>\n              <p id=\"transition-modal-description\">Where you can post and react anonymously</p>\n              <p id=\"transition-modal-description\">If you double click/tap on a post you can add tags</p>\n\n            </div>\n          </Fade>\n        </Modal>\n        <Route \n          exact\n          path='/(|atanon)' \n          render={(props) => {\n            return (\n              <PostContainer {...props} \n                posts={posts} \n                fetchMorePosts={fetchMorePosts}\n                addReaction={addReaction}\n                addTagToPost={addTagToPost}\n              />\n            )}}\n        />\n        <Route \n          exact path='/atanon/post' \n          render={(props) => {\n            return (\n              <NewPost {...props} \n                addPostToFrontOfArray={addPostToFrontOfArray}\n              /> \n            )\n          }}\n        />\n        <Fab classes={chubbyStyles}  aria-label=\"add\" className={classes.fabButton}>\n          <NavLink exact to=\"/atanon/post\" style={{ textDecoration: 'inherit', color: 'inherit'}} > \n            <AddIcon  /> \n          </NavLink>\n        </Fab>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}