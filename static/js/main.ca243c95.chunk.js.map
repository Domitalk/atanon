{"version":3,"sources":["components/Header.js","components/Post.js","containers/PostContainer.js","components/NewPost.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","styles","useGradientBtnStyles","theme","createMuiTheme","typography","htmlFontSize","React","useState","anchorEl","setAnchorEl","handleClose","clearSearchBar","className","position","Button","onClick","event","currentTarget","classes","variant","color","aria-controls","aria-haspopup","ThemeProvider","Typography","Menu","keepMounted","open","Boolean","onClose","TransitionComponent","Fade","MenuItem","style","textDecoration","fontWeight","activeStyle","exact","to","setShowSearch","showSearch","useStylesStag","makeStyles","margin","spacing","useStylesForm","root","width","useStyles","maxWidth","borderRadius","content","padding","title","letterSpacing","textShadow","likes","Post","mediaStyles","useCoverCardMediaStyles","shadowStyles","useBouncyShadowStyles","isFlipped","setIsFlipped","classesForm","formField","setFormField","classesStag","handleClick","number","post","id","addReaction","post_id","rtype","handleDoubleClick","submitNewTag","addTagToPost","alert","handleClickSearch","stagname","setSearchTerms","flipDirection","infinite","Card","key","cx","CardMedia","image","image_url","CardActionArea","CardContent","onDoubleClick","Box","display","flexDirection","alignItems","justifyContent","minHeight","textAlign","comment","CardActions","value","size","name","heart","smile","sad","angry","sortedstags","stag","stags","push","sort","a","b","map","showAllStags","direction","autoComplete","TextField","label","defaultValue","onChange","target","onKeyPress","preventDefault","Tooltip","flexGrow","paper","palette","text","secondary","progressRoot","marginTop","PostContainer","pageStart","loadMore","fetchMorePosts","hasMore","loader","canFetch","LinearProgress","useWindow","Grid","container","posts","item","xs","sm","md","lg","useStylesButton","useStylesCard","NewPost","classesCard","classesButton","setImage_url","setComment","handleChange","handleSubmit","length","fetch","method","headers","body","JSON","stringify","then","r","json","addPostToFrontOfArray","history","widget","window","cloudinary","createUploadWidget","cloudName","uploadPreset","error","result","checkUploadResult","resultEvent","errorEvent","innerWidth","innerHeight","temparray","info","secure_url","split","stringindex","findIndex","splitstring","splice","newURL","join","justify","align","onSubmit","noValidate","type","multiline","rows","zIndex","bottom","right","fabButton","modal","backgroundColor","background","border","boxShadow","shadows","outline","App","chubbyStyles","chubby","setOpen","setPosts","searchTerms","useSearchInputStyles","setCanFetch","newComment","updatedPost","index","slice","useEffect","setTimeout","newPost","newTag","InputBase","placeholder","startAdornment","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","in","path","render","filter","searchable","Object","keys","forEach","toLowerCase","includes","Fab","aria-label","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gVAqGeA,MA1Ff,SAAiBC,GACb,IAAMC,EAASC,cAETC,EAAQC,YAAe,CACzBC,WAAY,CAEVC,aAAc,KANA,EAWYC,IAAMC,SAAS,MAX3B,mBAWbC,EAXa,KAWHC,EAXG,KAiBdC,EAAc,WAChBD,EAAY,MACZV,EAAMY,kBAUV,OACI,yBAAMC,UAAU,SAASC,SAAS,SAC9B,kBAACC,EAAA,EAAD,CAAQC,QAlBI,SAAAC,GAChBP,EAAYO,EAAMC,gBAiBgBC,QAASlB,EAAQmB,QAAS,WAAYC,MAAO,UAAWR,UAAU,OAAOS,gBAAc,cAAcC,gBAAc,QAC7I,kBAACC,EAAA,EAAD,CAAgBrB,MAAOA,GAEf,kBAACsB,EAAA,EAAD,gBAIZ,kBAACC,EAAA,EAAD,CACIjB,SAAUA,EACVkB,aAAW,EACXC,KAAMC,QAAQpB,GACdqB,QAASnB,EACToB,oBAAqBC,KAEzB,kBAACC,EAAA,EAAD,CAAUjB,QAASL,GAAa,kBAAC,IAAD,CAC5BuB,MAAO,CACHC,eAAgB,OAChBC,WAAY,OACZf,MAAO,WAEXgB,YAAa,CACTF,eAAgB,OAChBC,WAAY,OACZf,MAAO,WACRiB,OAAK,EAACC,GAAG,YAVgB,UAYhC,kBAACN,EAAA,EAAD,CAAUjB,QAASL,GACf,kBAAC,IAAD,CACIuB,MAAO,CACHC,eAAgB,OAChBC,WAAY,OACZf,MAAO,WAEXgB,YAAa,CACTF,eAAgB,OAChBC,WAAY,OACZf,MAAO,WAEXiB,OAAK,EAACC,GAAG,gBAXb,WAeJ,kBAACN,EAAA,EAAD,CAAUjB,QAnDI,WAElBhB,EAAMwC,eAAexC,EAAMyC,YAE3B/B,EAAY,QAgDJ,kBAAC,IAAD,CACIwB,MAAO,CACHC,eAAgB,OAChBC,WAAY,OACZf,MAAO,WAEXkB,GAAG,WANP,c,oJCnEVG,EAAgBC,aAAW,SAAAxC,GAAK,MAAK,CACvCyC,OAAQ,CACNA,OAAQzC,EAAM0C,QAAQ,QAItBC,EAAgBH,aAAW,SAAAxC,GAAK,MAAK,CACvC4C,KAAM,CACJ,uBAAwB,CACtBH,OAAQ,OACRI,MAAO,UAKTC,EAAYN,aAAW,SAACxC,GAAD,MAAY,CACrC4C,KAAM,CACJG,SAAU,IACVN,OAAQ,OACRO,aAAc,GACdrC,SAAU,YAEZsC,QAAS,CACPC,QAAS,IAEXC,MAAO,CACLjC,MAAO,OACPkC,cAAe,MACfC,WAAY,sBAEdC,MAAO,CACHpC,MAAO,OACPkC,cAAe,MACfC,WAAY,0BA8KLE,EAzKF,SAAC1D,GAEV,IAAMC,EAASgD,IACTU,EAAcC,cACdC,EAAeC,cAJD,EAMctD,oBAAS,GANvB,mBAMbuD,EANa,KAMFC,EANE,KAQdC,EAAcnB,IARA,EAUctC,mBAAS,IAVvB,mBAUb0D,EAVa,KAUFC,EAVE,KAYdC,EAAc1B,IAGd2B,EAAc,SAACC,GAGbtE,EAAMuE,KAAKC,IACXxE,EAAMyE,YAAY,CACdC,QAAS1E,EAAMuE,KAAKC,GACpBG,MAAOL,KAMbM,EAAoB,WACtBZ,GAAcD,IAgBZc,EAAe,SAAC5D,GACdjB,EAAMuE,KAAKC,IACXxE,EAAM8E,aAAaZ,EAAWlE,EAAMuE,KAAKC,IACzCL,EAAa,KAEbY,MAAM,4DA0BRC,EAAoB,SAACC,GAEvBjF,EAAMkF,eAAeD,GACrBjF,EAAMwC,eAAc,IAKxB,OACI,kBAAC,IAAD,CAAeuB,UAAWA,EAAWoB,cAAc,aAAaC,SAAS,QACrE,kBAACC,EAAA,EAAD,CAAMC,IAAI,QAAQlE,QAAQ,WAAYP,UAAW0E,YAAGtF,EAAO8C,KAAMc,EAAad,OAC1E,kBAACyC,EAAA,EAAD,CACIrE,QAASwC,EACT8B,MAAOzF,EAAMuE,KAAKmB,YAEtB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAaC,cAAejB,EAAmB/D,UAAWZ,EAAOmD,SAE7D,kBAAC0C,EAAA,EAAD,CACIC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,UAAW,IACX9E,MAAO,eACP+E,UAAW,UAEX,wBAAIvF,UAAWZ,EAAOqD,OAAQtD,EAAMuE,KAAK8B,YAIrD,kBAACC,EAAA,EAAD,CAAazF,UAAU,eACnB,kBAACE,EAAA,EAAD,CAAQK,QAAS,WAAYC,MAAO,YAAaR,UAAU,QAAQ0F,MAAM,IAAIC,KAAK,QAAQC,KAAK,IAAIzF,QAAS,kBAAMqD,EAAY,KAC1H,0BAAMxD,UAAWZ,EAAOwD,OAAQzD,EAAMuE,KAAKmC,OAD/C,iBAGA,kBAAC3F,EAAA,EAAD,CAAQK,QAAS,WAAYC,MAAO,YAAaR,UAAU,QAAQ2F,KAAK,QAAQC,KAAK,IAAIzF,QAAS,kBAAMqD,EAAY,KAChH,0BAAMxD,UAAWZ,EAAOwD,OAAQzD,EAAMuE,KAAKoC,OAD/C,iBAGA,kBAAC5F,EAAA,EAAD,CAAQK,QAAS,WAAYC,MAAO,YAAaR,UAAU,QAAQ2F,KAAK,QAAQC,KAAK,IAAIzF,QAAS,kBAAMqD,EAAY,KAChH,0BAAMxD,UAAWZ,EAAOwD,OAAQzD,EAAMuE,KAAKqC,KAD/C,iBAGA,kBAAC7F,EAAA,EAAD,CAAQK,QAAS,WAAYC,MAAO,YAAaR,UAAU,QAAQ2F,KAAK,QAAQC,KAAK,IAAIzF,QAAS,kBAAMqD,EAAY,KAChH,0BAAMxD,UAAWZ,EAAOwD,OAAQzD,EAAMuE,KAAKsC,OAD/C,mBAMR,kBAACxB,EAAA,EAAD,CAAMC,IAAI,OAAOzE,UAAW0E,YAAGtF,EAAO8C,KAAMc,EAAad,OACrD,kBAACyC,EAAA,EAAD,CACIrE,QAASwC,EACT8B,MAAOzF,EAAMuE,KAAKmB,YAEtB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAaC,cAAejB,EAAmB/D,UAAWZ,EAAOmD,SAC7D,kBAAC0C,EAAA,EAAD,CACIC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,UAAW,IACX9E,MAAO,eACP+E,UAAW,SACXvF,UAAWuD,EAAYrB,MAGnB,wBAAIlC,UAAWZ,EAAOqD,OAAQtD,EAAMuE,KAAKC,GAtFhD,WAEjB,IAAIsC,EAAc,GAClB,IAAK,IAAIC,KAAQ/G,EAAMuE,KAAKyC,MACxBF,EAAYG,KAAK,CAACF,EAAM/G,EAAMuE,KAAKyC,MAAMD,KAY7C,OAVAD,EAAYI,MAAK,SAASC,EAAGC,GACzB,OAAOA,EAAE,GAAKD,EAAE,MASbL,EAAYO,KAAI,SAAAN,GACvB,OAAO,kBAAChG,EAAA,EAAD,CAAQuE,IAAKyB,EAAK,GAAIN,KAAMM,EAAK,GAAI/F,QAAS,WAAOgE,EAAkB+B,EAAK,KAAMlG,UAAWuD,EAAYxB,OAAQvB,MAAM,YAAYmF,KAAK,QAAQpF,QAAS,YAAY,0BAAMP,UAAWZ,EAAOwD,OAAQsD,EAAK,GAArC,IAA0CA,EAAK,GAAK,EAAV,YAAmBA,EAAK,IAAK,UAqE7KO,GAAgB,SAK9E,kBAAChB,EAAA,EAAD,CAAaiB,UAAU,GAAG1G,UAAU,eAChC,0BAAMA,UAAWoD,EAAYlB,KAAMyE,aAAa,MAC5C,kBAACC,EAAA,EAAD,CACIC,MAAM,UACNC,aAAa,GACblB,KAAK,gBACLrF,QAAQ,WACRC,MAAM,YACNmF,KAAK,QACLoB,SA1HC,SAAC3G,GACtBkD,EAAalD,EAAM4G,OAAOtB,QA0HNA,MAAOrC,EACP4D,WAxHJ,SAAC7G,GACC,UAAdA,EAAMqE,MACNrE,EAAM8G,iBACNlD,SAwHQ,kBAACmD,EAAA,EAAD,CAAS1E,MAAM,kBACX,kBAACvC,EAAA,EAAD,CAAQyF,KAAK,QAAQpF,QAAS,WAAYC,MAAO,YAAaL,QAAS6D,GAAc,kBAAC,IAAD,CAAYxD,MAAM,oB,mCC/MzH4B,EAAYN,aAAW,SAAAxC,GAAK,MAAK,CACnC4C,KAAM,CACJkF,SAAU,EACVpF,QAAS,GAEXqF,MAAO,CACL7E,QAASlD,EAAM0C,QAAQ,GACvBuD,UAAW,SACX/E,MAAOlB,EAAMgI,QAAQC,KAAKC,WAE5BC,aAAc,CACVtF,MAAO,OACP,YAAa,CACXuF,UAAWpI,EAAM0C,QAAQ,SAyCpB2F,EAnCO,SAACxI,GACnB,IAAMmB,EAAU8B,IAchB,OACI,qCAAKpC,UAAWM,EAAQ4B,MAAxB,YAAwC,UACpC,kBAAC,IAAD,CACI0F,UAAW,EACXC,SAAU1I,EAAM2I,eAChBC,SAAS,EACTC,OAAQ,yBAAKhI,UAAU,SAASyE,IAAK,GAA7B,IAAiC,6BACnCtF,EAAM8I,SAAU,kBAACC,EAAA,EAAD,CAAgB1H,MAAM,cAAiB,KACzD,8BACJ2H,WAAW,GAEX,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACrG,QAAS,GApB1B7C,EAAMmJ,MAAM9B,KAAI,SAAC9C,GACpB,OACI,kBAAC0E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACjC,kBAAC,EAAD,CAAMhH,cAAexC,EAAMwC,cAAe0C,eAAgBlF,EAAMkF,eAAgBrE,UAAWM,EAAQ+G,MAAO5C,IAAKf,EAAKC,GAAID,KAAMA,EAAME,YAAazE,EAAMyE,YAAaK,aAAc9E,EAAM8E,uB,QC1BtM2E,EAAkB9G,aAAW,SAAAxC,GAAK,MAAK,CACzC4C,KAAM,CACJ,QAAS,CACPH,OAAQzC,EAAM0C,QAAQ,SAKxB6G,EAAgB/G,YAAW,CAC7BI,KAAM,CACJG,SAAU,UAIVD,EAAYN,aAAW,SAAAxC,GAAK,MAAK,CACnC4C,KAAM,CACJkF,SAAU,OAIVnF,EAAgBH,aAAW,SAAAxC,GAAK,MAAK,CACvC4C,KAAM,CACJ,uBAAwB,CACtBH,OAAQzC,EAAM0C,QAAQ,GACtBG,MAAO,aAsLA2G,EAhLC,SAAC3J,GACb,IAAMmB,EAAU8B,IACVgB,EAAcnB,IACd8G,EAAcF,IACdG,EAAgBJ,IAJC,EAQWjJ,mBAAS,IARpB,mBAQhBkF,EARgB,KAQLoE,EARK,OASOtJ,mBAAS,IAThB,mBAShB6F,EATgB,KASP0D,EATO,KAWjB9J,EAASC,cAIXqE,EAAO,CACPmB,YACAW,WAIE2D,EAAe,SAAC/I,GACQ,cAAtBA,EAAM4G,OAAOpB,KACbqD,EAAa7I,EAAM4G,OAAOtB,OACG,YAAtBtF,EAAM4G,OAAOpB,MACpBsD,EAAW9I,EAAM4G,OAAOtB,QAK1B0D,EAAe,SAAChJ,GAClBA,EAAM8G,iBAGF1B,EAAQ6D,OAAS,GAAKxE,EAAUwE,OAAS,GACzCC,MAAM,yCAA0C,CAC5CC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB9E,YACAW,cAGPoE,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAACE,GACHb,EAAa,IACbC,EAAW,IAGX/J,EAAM4K,sBAAsBD,GAE5B3K,EAAM6K,QAAQ5D,KAAK,gBAM3B6D,EAASC,OAAOC,WAAWC,mBAAmB,CAC9CC,UAAW,YACXC,aAAc,aACd,SAACC,EAAOC,GAGJC,EAAkBD,EAAQD,MAS5BE,EAAoB,SAACC,EAAaC,GACpC,GAA0B,YAAtBD,EAAYtK,MAAqB,CACjC,GAAM8J,OAAOU,YAAc,KAAWV,OAAOW,aAAe,IAAO,CAC/D,IACIC,EADUJ,EAAYK,KAAKC,WACPC,MAAM,KAC1BC,EAAcJ,EAAUK,WAAU,SAACC,GAAD,MAAiC,WAAhBA,KACvDN,EAAUO,OAAOH,EAAc,EAAG,EAAG,eACrC,IAAII,EAASR,EAAUS,KAAK,KAC5BtC,EAAa,GAAD,OAAIqC,SAEhBrC,EAAa,GAAD,OAAIyB,EAAYK,KAAKC,aAUrC/B,EAAa,GAAD,OAAIyB,EAAYK,KAAKC,eAuBzC,OACI,qCAAKhL,UAAU,UAAf,YAAmCM,EAAQ4B,MACvC,6BACA,kBAACkG,EAAA,EAAD,CAAMC,WAAS,EACX3B,UAAU,MACV8E,QAAQ,SACRpG,WAAW,SACXpD,QAAS,GAET,kBAACoG,EAAA,EAAD,CAAMG,MAAI,GACN,6BACA,6BACA,kBAAC,EAAD,CAAM7E,KAAMA,KAEhB,kBAAC0E,EAAA,EAAD,CAAMG,MAAI,GACN,kBAAC/D,EAAA,EAAD,CAAMiH,MAAM,SAASzL,UAAW+I,EAAY7G,MACxC,0BAAMlC,UAAWoD,EAAYlB,KAAMwJ,SAAUtC,EAAcuC,YAAU,EAAChF,aAAa,OAG/E,kBAACC,EAAA,EAAD,CACIC,MAAM,YACN+E,KAAK,MACLhG,KAAK,YACLF,MAAOb,EACPkC,SAAUoC,EACV5I,QAAQ,WAGZ,kBAACqG,EAAA,EAAD,CACIC,MAAM,UACNgF,WAAS,EACTD,KAAK,OACLhG,KAAK,UACLkG,KAAK,IACLpG,MAAOF,EACPuB,SAAUoC,EACV5I,QAAQ,WAQZ,kBAAC0E,EAAA,EAAD,CAAKwG,MAAM,SAASzL,UAAWgJ,EAAc9G,MACzC,kBAAChC,EAAA,EAAD,CAAQC,QA7FjB,WACf8J,EAAOlJ,QA4F8CT,QAASlB,GAAtC,yBAEA,kBAACc,EAAA,EAAD,CAAQC,QAASiJ,EAAc9I,QAASlB,GAAxC,2B,yFC9L1BgD,GAAYN,aAAW,SAAAxC,GAAK,MAAK,CACrC4C,KAAM,CACJjC,SAAU,QACV8L,OAAQ,EACRvJ,QAAS,UACT0C,QAAS,OACTE,WAAY,SACZ4G,OAAQ,MACRjK,OAAQ,SACRkK,MAAO,QAGTC,UAAW,CACTjM,SAAU,QACV8L,OAAQ,EACRC,OAAQ,MACRC,MAAO,MACPlK,OAAQ,UAGVoK,MAAO,CACLjH,QAAS,OACTE,WAAY,SACZC,eAAgB,UAElBgC,MAAO,CACL+E,gBAAiB9M,EAAMgI,QAAQ+E,WAAWhF,MAC1CiF,OAAQ,oBACRC,UAAWjN,EAAMkN,QAAQ,GACzBhK,QAASlD,EAAM0C,QAAQ,EAAG,EAAG,GAC7ByK,QAAS,OAmOEC,OA/Nf,SAAavN,GAGX,IAAMwN,EAAetN,YAAqB,CAAEuN,QAAQ,IAHlC,EAMMjN,oBAAS,GANf,mBAMXoB,EANW,KAML8L,EANK,KAOZvM,EAAU8B,KAPE,EAUQzC,mBAAS,IAVjB,mBAUX2I,EAVW,KAUJwE,EAVI,OAYkBnN,oBAAS,GAZ3B,mBAYXiC,EAZW,KAYCD,EAZD,OAcoBhC,mBAAS,IAd7B,mBAcXoN,EAdW,KAcE1I,EAdF,KAgBZjF,EAAS4N,eAhBG,EAkBcrN,oBAAS,GAlBvB,mBAkBXsI,EAlBW,KAkBDgF,EAlBC,KAsBZrJ,EAAc,SAACsJ,GACnB5D,MAAM,6CAA8C,CAChDC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUuD,KAExBtD,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAACuD,GACH,IAAIC,EAAQ9E,EAAM6C,WAAU,SAAAzH,GAAI,OAAIA,EAAKC,KAAOwJ,EAAYxJ,MAC5DmJ,EAAS,GAAD,mBAAKxE,EAAM+E,MAAM,EAAGD,IAApB,CAA4BD,GAA5B,YAA4C7E,EAAM+E,MAAMD,EAAQ,UAK9EE,qBAAU,WAERhE,MAAM,0CACLM,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAACE,GACHgD,EAAShD,QAEZ,IAGH,IAAMhC,EAAiB,WAEjBQ,EAAMe,OAAS,GAAKpB,GACpBsF,YAAW,WACPjE,MAAM,0CAAD,OAA2ChB,EAAMA,EAAMe,OAAS,GAAG1F,KACvEiG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAACE,GACDA,EAAKT,OAAS,EAChByD,EAAS,GAAD,mBACDxE,GADC,YAEDwB,KAGPmD,GAAY,QAGjB,OAKHlD,EAAwB,SAACyD,GAC7BV,EAAS,CACLU,GADI,mBAEDlF,MAKHxI,EAAc,WAClB+M,GAAQ,IAIJ5I,EAAe,SAACwJ,EAAQ5J,GAC5ByF,MAAM,yCAA0C,CAC9CC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB9F,QAASA,EACTO,SAAUqJ,MAGb7D,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAACuD,GACL,IAAIC,EAAQ9E,EAAM6C,WAAU,SAAAzH,GAAI,OAAIA,EAAKC,KAAOwJ,EAAYxJ,MAC5DmJ,EAAS,GAAD,mBAAKxE,EAAM+E,MAAM,EAAGD,IAApB,CAA4BD,GAA5B,YAA4C7E,EAAM+E,MAAMD,EAAQ,UAsD5E,OACE,kBAAC,IAAD,KACE,yBAAKpN,UAAU,OACb,kBAAC,EAAD,CAAQD,eAbS,WACrBsE,EAAe,IACf1C,GAAc,IAW8BA,cAAeA,EAAeC,WAAYA,IACjFA,EACD,yBAAK5B,UAAWM,EAAQ4B,MACtB,kBAACwL,GAAA,EAAD,CACEpN,QAASlB,EACTuO,YAAa,YACbC,eAAgB,kBAAC,KAAD,MAChBlI,MAAOqH,EACPhG,SA7DiB,SAAC3G,GAC1BiE,EAAejE,EAAM4G,OAAOtB,WAgEtB,KACF,kBAACmI,EAAA,EAAD,CACEC,kBAAgB,yBAChBC,mBAAiB,+BACjB/N,UAAWM,EAAQ6L,MACnBpL,KAAMA,EACNE,QAASnB,EACTkO,sBAAoB,EACpBC,kBAAmBC,IACnBC,cAAe,CACbC,QAAS,MAGX,kBAACjN,EAAA,EAAD,CAAMkN,GAAItN,GACR,yBAAKf,UAAWM,EAAQ+G,MAAOlH,QAASL,GACtC,wBAAI6D,GAAG,0BAAP,oBACA,uBAAGA,GAAG,gCAAN,4CACA,uBAAGA,GAAG,gCAAN,yDAKN,kBAAC,IAAD,CACElC,OAAK,EACL6M,KAAK,aACLC,OAAQ,SAACpP,GACP,OACE,kBAAC,EAAD,iBAAmBA,EAAnB,CACEmJ,MArFRyE,EAAY1D,OAAS,GACvB4D,GAAY,GACL3E,EAAMkG,QAAO,SAAA9K,GAClB,IAAI+K,GAAa,EACjB,GAAG/K,EAAKC,GAWR,OAVE+K,OAAOC,KAAKjL,EAAKyC,OAAOyI,SAAQ,SAAAxK,GAC3BA,EAASyK,cAAcC,SAAS/B,EAAY8B,iBAC7CJ,GAAa,MAGhB/K,EAAKC,IACHD,EAAK8B,QAAQqJ,cAAcC,SAAS/B,EAAY8B,iBACjDJ,GAAa,KAGbA,OASNxB,GAAY,GACL3E,GA6DGR,eAAgBA,EAChBlE,YAAaA,EACbK,aAAcA,EACdgE,SAAUA,EACV5D,eAAgBA,EAChB1C,cAAeA,QAIvB,kBAAC,IAAD,CACEF,OAAK,EAAC6M,KAAK,eACXC,OAAQ,SAACpP,GACP,OACE,kBAAC,EAAD,iBAAaA,EAAb,CACE4K,sBAAuBA,QAK/B,kBAACgF,GAAA,EAAD,CAAK5O,QApEkB,WAC3BkE,EAAe,IACf1C,GAAc,IAkE0BrB,QAASqM,EAAeqC,aAAW,MAAMhP,UAAWM,EAAQ4L,WAC9F,kBAAC,IAAD,CAASzK,OAAK,EAACC,GAAG,eAAeL,MAAO,CAAEC,eAAgB,UAAWd,MAAO,YAC1E,kBAAC,KAAD,WC5PQQ,QACW,cAA7BkJ,OAAO+E,SAASC,UAEe,UAA7BhF,OAAO+E,SAASC,UAEhBhF,OAAO+E,SAASC,SAASC,MACvB,2DCVNC,IAASb,OAAO,kBAAC,GAAD,MAASc,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7F,MAAK,SAAA8F,GACjCA,EAAaC,kB","file":"static/js/main.ca243c95.chunk.js","sourcesContent":["import React from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { useGradientBtnStyles } from '@mui-treasury/styles/button/gradient';\nimport Fade from '@material-ui/core/Fade';\n\n\nfunction Header (props) {\n    const styles = useGradientBtnStyles();\n\n    const theme = createMuiTheme({\n        typography: {\n          // Tell Material-UI what the font-size on the html element is.\n          htmlFontSize: 8,\n        },\n    });\n\n    // toggle header menu \n    const [anchorEl, setAnchorEl] = React.useState(null);\n    \n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n    };\n    \n    const handleClose = () => {\n        setAnchorEl(null);\n        props.clearSearchBar()\n    };\n\n    const showSearchBar = () => {\n        // console.log(\"toggle search bar\")\n        props.setShowSearch(!props.showSearch)\n        // console.log(props.showSearch)\n        setAnchorEl(null);\n    }\n\n    return (\n        <div  className=\"header\" position=\"fixed\"  >\n            <Button onClick={handleClick} classes={styles} variant={'outlined'} color={'primary'} className=\"logo\" aria-controls=\"simple-menu\" aria-haspopup=\"true\"  >\n                <ThemeProvider  theme={theme}>\n                    {/* <Link exact to=\"/atanon\" style={{ textDecoration: 'inherit', color: 'inherit'}}> */}\n                        <Typography>@ANON</Typography>\n                    {/* </Link> */}\n                </ThemeProvider>\n            </Button>\n            <Menu\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n            >\n            <MenuItem onClick={handleClose}><NavLink  \n                style={{\n                    textDecoration: \"none\",\n                    fontWeight: \"bold\",\n                    color: \"#F44A26\"\n                }} \n                activeStyle={{\n                    textDecoration: \"none\",\n                    fontWeight: \"bold\",\n                    color: \"#F44A26\"\n                }} exact to=\"/atanon/\"> Home\n            </NavLink></MenuItem>\n            <MenuItem onClick={handleClose}>\n                <NavLink \n                    style={{\n                        textDecoration: \"none\",\n                        fontWeight: \"bold\",\n                        color: \"#F44A26\"\n                    }}\n                    activeStyle={{\n                        textDecoration: \"none\",\n                        fontWeight: \"bold\",\n                        color: \"#F44A26\"\n                    }}\n                    exact to=\"/atanon/post\"> \n                    Upload \n                </NavLink>\n            </MenuItem>\n            <MenuItem onClick={showSearchBar} >\n                <NavLink \n                    style={{\n                        textDecoration: \"none\",\n                        fontWeight: \"bold\",\n                        color: \"#F44A26\"\n                    }}\n                    to=\"/atanon\">\n                    Search\n                </NavLink>\n            </MenuItem>\n            </Menu>\n        </div>\n    )\n\n}\n\nexport default Header ","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport cx from 'clsx';\nimport Box from '@material-ui/core/Box';\nimport { useCoverCardMediaStyles } from '@mui-treasury/styles/cardMedia/cover';\nimport { useBouncyShadowStyles } from \"@mui-treasury/styles/shadow/bouncy\";\nimport ReactCardFlip from 'react-card-flip';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport TextField from '@material-ui/core/TextField';\nimport CreateIcon from '@material-ui/icons/Create';\n\nconst useStylesStag = makeStyles(theme => ({\n    margin: {\n      margin: theme.spacing(1),\n    }\n}))\n\nconst useStylesForm = makeStyles(theme => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: 'none', \n        width: 200,\n      },\n    },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 304,\n      margin: 'auto',\n      borderRadius: 10,\n      position: 'relative',\n    },\n    content: {\n      padding: 24,\n    },\n    title: {\n      color: '#fff',\n      letterSpacing: '2px',\n      textShadow: \"#260C0C 1px 0 10px\", \n    },\n    likes: {\n        color: '#fff',\n        letterSpacing: '2px',\n        textShadow: \"#260C0C 1px 0 10px\", \n    },\n}));\n\n\nconst Post = (props) => {\n    \n    const styles = useStyles();\n    const mediaStyles = useCoverCardMediaStyles();\n    const shadowStyles = useBouncyShadowStyles();\n\n    const [isFlipped, setIsFlipped] = useState(false)\n\n    const classesForm = useStylesForm();\n\n    const [formField, setFormField] = useState(\"\")\n\n    const classesStag = useStylesStag();\n\n    // create a reaction \n    const handleClick = (number) => {\n        // console.log(number)\n        // setEmotion(number)\n        if (props.post.id) {\n            props.addReaction({\n                post_id: props.post.id, \n                rtype: number\n            })\n        }\n    }\n\n    // flip the card back and forth so you can add tags on the back\n    const handleDoubleClick = () => {\n        setIsFlipped(!isFlipped)\n    }\n\n    // controlled form \n    const handleFormChange = (event) => {\n        setFormField(event.target.value)\n    }\n    // check for 'ENTER'\n    const catchReturn = (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault() \n            submitNewTag()\n        }\n    }\n\n    // create new tag \n    const submitNewTag = (event) => {\n        if (props.post.id) {\n            props.addTagToPost(formField, props.post.id)\n            setFormField(\"\")\n        } else {\n            alert(\"You cannot add tags until you finish creating the post!\")\n        }\n    }\n\n    // show all the search tags as buttons \n    const showAllStags = () => {\n        // console.log(Object.keys(props.post.stags))\n        let sortedstags = []\n        for (var stag in props.post.stags) {\n            sortedstags.push([stag, props.post.stags[stag]])\n        }\n        sortedstags.sort(function(a, b) {\n            return b[1] - a[1]\n        })\n\n        // console.log(sortedstags)\n        // let stagkeys = Object.keys(props.post.stags)\n        // stagkeys.reverse()\n        // console.log(stagkeys)\n        // let stagkeysshorter = stagkeys.slice(0, 5)\n        // console.log(props.post.stags, sortedstags)\n        return sortedstags.map(stag => {\n        return <Button key={stag[0]} name={stag[0]} onClick={() => {handleClickSearch(stag[0])}} className={classesStag.margin} color='secondary' size=\"large\" variant={'outlined'}><span className={styles.likes}>{stag[0]} {stag[1] > 1 ? ` x${stag[1]}`:null}</span></Button>\n        })\n    }\n\n    const handleClickSearch = (stagname) => {\n        // console.log(\"testing\", stagname)\n        props.setSearchTerms(stagname)\n        props.setShowSearch(true)\n\n    }\n\n\n    return (\n        <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\" infinite=\"true\" >\n            <Card key=\"front\" variant=\"outlined\"  className={cx(styles.root, shadowStyles.root)}>\n                <CardMedia \n                    classes={mediaStyles} \n                    image={props.post.image_url}\n                />\n                <CardActionArea>\n                    <CardContent onDoubleClick={handleDoubleClick} className={styles.content} >\n                        \n                        <Box\n                            display={'flex'}\n                            flexDirection={'column'}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                            minHeight={360}\n                            color={'common.white'}\n                            textAlign={'center'}\n                        >\n                            <h1 className={styles.title}>{props.post.comment}</h1>\n                        </Box>\n                    </CardContent>\n                </CardActionArea>\n                <CardActions className=\"reactionBox\" >\n                    <Button variant={'outlined'} color={'secondary'} className=\"order\" value=\"1\" size=\"small\" name=\"1\" onClick={() => handleClick(1)}>\n                        <span className={styles.likes}>{props.post.heart}</span> ❤️\n                    </Button>\n                    <Button variant={'outlined'} color={'secondary'} className=\"order\" size=\"small\" name=\"2\" onClick={() => handleClick(2)}>\n                        <span className={styles.likes}>{props.post.smile}</span> 😊\n                    </Button>\n                    <Button variant={'outlined'} color={'secondary'} className=\"order\" size=\"small\" name=\"3\" onClick={() => handleClick(3)}>\n                        <span className={styles.likes}>{props.post.sad}</span> 😔\n                    </Button>\n                    <Button variant={'outlined'} color={'secondary'} className=\"order\" size=\"small\" name=\"4\" onClick={() => handleClick(4)}>\n                        <span className={styles.likes}>{props.post.angry}</span> 😠\n                    </Button>\n                </CardActions> \n            </Card>\n        \n            <Card key=\"back\" className={cx(styles.root, shadowStyles.root)}>\n                <CardMedia \n                    classes={mediaStyles} \n                    image={props.post.image_url}\n                />\n                <CardActionArea>\n                    <CardContent onDoubleClick={handleDoubleClick} className={styles.content}>\n                        <Box\n                            display={'flex'}\n                            flexDirection={'column'}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                            minHeight={360}\n                            color={'common.white'}\n                            textAlign={'center'}\n                            className={classesStag.root}\n                        >\n                            {/* <div className={classesStag.root}> */}\n                                <h3 className={styles.title}>{props.post.id ? showAllStags(): null }</h3>\n                            {/* </div> */}\n                        </Box>\n                    </CardContent>\n                </CardActionArea>\n                <CardActions direction='' className=\"reactionBox\" >\n                    <form className={classesForm.root} autoComplete=\"on\" >\n                        <TextField\n                            label=\"new tag\"\n                            defaultValue=\"\"\n                            name=\"New Tag Field\"\n                            variant=\"standard\"\n                            color=\"secondary\"\n                            size=\"small\"\n                            onChange={handleFormChange}\n                            value={formField}\n                            onKeyPress={catchReturn}\n                        />\n                    </form>\n                    <Tooltip title=\"Create New Tag\">\n                        <Button size=\"small\" variant={'outlined'} color={'secondary'} onClick={submitNewTag}><CreateIcon color=\"secondary\" /></Button> \n                    </Tooltip>\n                </CardActions>\n            </Card>\n        </ReactCardFlip>\n\n    )\n}\n\nexport default Post ","import React from 'react'\nimport Post from '../components/Post'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n      spacing: 8,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n    progressRoot: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n      },\n  \n  }));\n\nconst PostContainer = (props) => {\n    const classes = useStyles();\n\n    // render all the items in posts \n    const mapAllPosts = () => {\n        // console.log(props)\n        return props.posts.map((post) => {\n            return (\n                <Grid item xs={12} sm={6} md={4} lg={4}  >\n                    <Post setShowSearch={props.setShowSearch} setSearchTerms={props.setSearchTerms} className={classes.paper} key={post.id} post={post} addReaction={props.addReaction} addTagToPost={props.addTagToPost} />\n                </Grid>\n            )\n        })\n    }\n\n    return (\n        <div className={classes.root} className=\"spaced\" >\n            <InfiniteScroll\n                pageStart={0}\n                loadMore={props.fetchMorePosts}\n                hasMore={true || false}\n                loader={<div className=\"loader\" key={0}> <br></br>\n                    { props.canFetch? <LinearProgress color=\"secondary\" /> : null }\n                    <br></br></div>}\n                useWindow={false}\n            >\n                <Grid container spacing={4} >\n                    {mapAllPosts()}\n                </Grid>\n            </InfiniteScroll>\n        </div>\n    )\n\n}\n\nexport default PostContainer \n","import React, { useState } from 'react'\nimport Post from '../components/Post'\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport { useGradientBtnStyles } from '@mui-treasury/styles/button/gradient';\nimport Box from '@material-ui/core/Box';\n\n\nconst useStylesButton = makeStyles(theme => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n  }));\n\nconst useStylesCard = makeStyles({\n    root: {\n      maxWidth: '70vw',\n    },\n  });\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n    },\n}));\n\nconst useStylesForm = makeStyles(theme => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '67vw'\n      },\n    },\n  }));\n\n\nconst NewPost = (props) => {\n    const classes = useStyles();\n    const classesForm = useStylesForm();\n    const classesCard = useStylesCard();\n    const classesButton = useStylesButton();\n\n\n    // controlled form fields\n    const [image_url, setImage_url] = useState(\"\")\n    const [comment, setComment] = useState(\"\")\n\n    const styles = useGradientBtnStyles();\n\n\n    // object to be sent to front of main state so image shows up immediately\n    let post = {\n        image_url, \n        comment\n    }\n\n    // controlled form handler\n    const handleChange = (event) => {\n        if (event.target.name === \"image_url\") {\n            setImage_url(event.target.value)\n        } else if (event.target.name === \"comment\") {\n            setComment(event.target.value)\n        }\n    }\n\n    // fetch to create new post\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        // console.log(event)\n        // for some reason the upload widget is setting off a submit so check for fields\n        if (comment.length > 1 && image_url.length > 1) {\n            fetch('https://atanon-api.herokuapp.com/posts', {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    image_url,\n                    comment\n                })\n            })\n            .then(r => r.json())\n            .then((json) => {\n                setImage_url(\"\")\n                setComment(\"\")\n                // console.log(\"create new post\")\n                // console.log(\"after post json\", json)\n                props.addPostToFrontOfArray(json)\n                // redirect to main page when upload finished\n                props.history.push('/atanon/');\n            })\n        }\n    }\n\n    // image upload widget\n    let widget = window.cloudinary.createUploadWidget({ \n        cloudName: \"dwazq8zps\", \n        uploadPreset: \"zvziodpl\" }, \n        (error, result) => { \n            // console.log(\"result event\", result)\n            // console.log(\"error event\", error)\n            checkUploadResult(result, error)\n        });\n\n    // to render the widget \n    const showWidget = () => {\n        widget.open()\n    }\n\n    // a check on whether the widget uploaded image\n    const checkUploadResult = (resultEvent, errorEvent) => {\n        if (resultEvent.event === 'success') {\n            if (( window.innerWidth <= 800 ) && ( window.innerHeight <= 600 )) {\n                let tempurl = resultEvent.info.secure_url\n                let temparray = tempurl.split(\"/\")\n                let stringindex = temparray.findIndex((splitstring) => splitstring === \"upload\")\n                temparray.splice(stringindex + 1, 0, \"w_400/a_270\")\n                let newURL = temparray.join(\"/\")\n                setImage_url(`${newURL}`)\n            } else {\n                setImage_url(`${resultEvent.info.secure_url}`)\n            }\n              \n            // console.log(\"photo url\", resultEvent.info.secure_url)\n            // let tempurl = resultEvent.info.secure_url\n            // let temparray = tempurl.split(\"/\")\n            // let stringindex = temparray.findIndex((splitstring) => splitstring === \"upload\")\n            // temparray.splice(stringindex + 1, 0, \"w_400/a_270\")\n            // let newURL = temparray.join(\"/\")\n            // setImage_url(`${newURL}`)\n            setImage_url(`${resultEvent.info.secure_url}`)\n        }\n        // use the hook to setImage_url \n    }\n\n    // const rotateLeft = () => {\n    //     if (!image_url.includes(\"w_400/a_270\")){\n    //         let tempurl = image_url \n    //         let temparray = tempurl.split(\"/\")\n    //         let stringindex = temparray.findIndex((splitstring) => splitstring === \"upload\")\n    //         temparray.splice(stringindex + 1, 0, \"w_400/a_270\")\n    //         let newURL = temparray.join(\"/\")\n    //         setImage_url(`${newURL}`)\n    //     } else {\n    //         let tempurl = image_url \n    //         let temparray = tempurl.split(\"/\")\n    //         let stringindex = temparray.findIndex((splitstring) => splitstring === \"upload\")\n    //         temparray.splice(stringindex + 1, 2)\n    //         let newURL = temparray.join(\"/\")\n    //         setImage_url(`${newURL}`)\n    //     }\n    // }\n\n    return(\n        <div className=\"spaced\" className={classes.root}>\n            <br></br>\n            <Grid container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={9}\n            > \n                <Grid item>\n                    <br></br>\n                    <br></br>\n                    <Post post={post} /> \n                </Grid>\n                <Grid item >\n                    <Card align='center' className={classesCard.root}>\n                        <form className={classesForm.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n                            {/* <h3>Image URL </h3> */}\n                            {/* <input type=\"url\" name=\"image_url\" value={image_url} onChange={handleChange} /> */}\n                            <TextField \n                                label=\"Image URL\"\n                                type=\"url\"\n                                name=\"image_url\"\n                                value={image_url}\n                                onChange={handleChange}\n                                variant=\"filled\"\n                                />\n                            {/* <h3>Or Upload</h3> */}\n                            <TextField \n                                label=\"Comment\"\n                                multiline\n                                type=\"text\"\n                                name=\"comment\"\n                                rows=\"5\"\n                                value={comment}\n                                onChange={handleChange}\n                                variant=\"filled\"\n                            />\n                            {/* <Button onClick={rotateLeft} classes={styles}>Rotate Counter-clock</Button> */}\n\n                            {/* <p>*While uploading on mobile, some cameras save at different angles than expected.</p> */}\n                            {/* <h3>Comment</h3>\n                            <textarea name=\"comment\" value={comment} onChange={handleChange} /> */}\n                            {/* <br></br> */}\n                            <Box align=\"center\" className={classesButton.root} >\n                                <Button onClick={showWidget} classes={styles}>Upload Your Own Photo</Button>\n                                {/* <button onClick={showWidget}>Upload Your Own Photo</button> */}\n                                <Button onClick={handleSubmit} classes={styles}>Submit Your Post</Button>\n                            {/* <input type=\"submit\" /> */}\n                            </Box>\n                        </form>\n                    </Card>\n                </Grid>\n            </Grid>\n        </div>\n    )\n\n}\n\nexport default NewPost\n\n","import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport Header from './components/Header'\nimport PostContainer from './containers/PostContainer'\nimport { BrowserRouter as Router, Route, NavLink} from 'react-router-dom'\nimport NewPost from './components/NewPost'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useGradientBtnStyles } from '@mui-treasury/styles/button/gradient';\nimport {Fade, Fab, Backdrop, Modal} from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add';\n\nimport { useSearchInputStyles } from '@mui-treasury/styles/input/search';\nimport Search from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'fixed',\n    zIndex: 1,\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    bottom: '3vh',\n    margin: '0 auto',\n    right: '20vw', \n  },\n  \n  fabButton: {\n    position: 'fixed',\n    zIndex: 1,\n    bottom: '3vh',\n    right: '4vw',\n    margin: '0 auto',\n  },\n\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #ff8a65',\n    boxShadow: theme.shadows[0],\n    padding: theme.spacing(2, 4, 3),\n    outline: 0\n  },\n}));\n\nfunction App(props) {\n\n  // make the button rounded gradient\n  const chubbyStyles = useGradientBtnStyles({ chubby: true });\n\n  // variable for introduction modal \n  const [open, setOpen] = useState(true);\n  const classes = useStyles();\n\n  // main collection of posts\n  const [posts, setPosts] = useState([])\n  \n  const [showSearch, setShowSearch] = useState(false) \n\n  const [searchTerms, setSearchTerms] = useState(\"\")\n\n  const styles = useSearchInputStyles();\n\n  const [canFetch, setCanFetch] = useState(true)\n\n\n  // pass down method in order to create reaction \n  const addReaction = (newComment) => {\n    fetch(`https://atanon-api.herokuapp.com/reactions`, {\n        method: 'POST', \n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newComment)\n    })\n    .then(r => r.json())\n    .then((updatedPost) => {\n        let index = posts.findIndex(post => post.id === updatedPost.id)\n        setPosts([...posts.slice(0, index), updatedPost, ...posts.slice(index + 1)])\n    })\n  }\n\n  // componentDidMount, fetch of data for initial rendering on homepage\n  useEffect(() => {\n    // console.log(\"Startup\")\n    fetch('https://atanon-api.herokuapp.com/posts')\n    .then(r => r.json())\n    .then((json) => {\n        setPosts(json)\n    })\n  }, [])\n  \n  // infinitescroll fetch more posts, pass down to PostContainer\n  const fetchMorePosts = () => {\n    // console.log(\"fetchmoreposts\")\n    if (posts.length > 0 && canFetch) {\n        setTimeout(() => {\n            fetch(`https://atanon-api.herokuapp.com/posts/${posts[posts.length - 1].id}`)\n            .then(r => r.json())\n            .then((json) => {\n              if (json.length > 0) {\n                setPosts([\n                    ...posts,\n                    ...json\n                ])\n              } else {\n                setCanFetch(false)\n              }\n            })\n        }, 1500)\n    }   \n  }\n  // pass down to NewPost\n  // when creating new post, add to front of collection so it renders first\n  const addPostToFrontOfArray = (newPost) => {\n    setPosts([\n        newPost,\n        ...posts\n    ])\n  }\n\n  // handle closing introduction modal \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // Add a tag to a Post \n  const addTagToPost = (newTag, post_id) => {\n    fetch(`https://atanon-api.herokuapp.com/stags`, {\n      method: 'POST', \n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        post_id: post_id, \n        stagname: newTag\n      })\n    })\n    .then(r => r.json())\n    .then((updatedPost) => {\n      let index = posts.findIndex(post => post.id === updatedPost.id)\n      setPosts([...posts.slice(0, index), updatedPost, ...posts.slice(index + 1)])\n    })\n  }\n\n  const handleSearchChange = (event) => {\n    setSearchTerms(event.target.value)\n  }\n\n  const filteredPosts = () => {\n    // let tempposts = [...posts]\n\n    // check to see if search field is relevant \n    if (searchTerms.length > 2) {\n      setCanFetch(false)\n      return posts.filter(post => {\n        let searchable = false \n        if(post.id) {\n          Object.keys(post.stags).forEach(stagname => {\n            if(stagname.toLowerCase().includes(searchTerms.toLowerCase())) {\n              searchable = true \n            }\n        })\n        if(post.id) {\n          if(post.comment.toLowerCase().includes(searchTerms.toLowerCase())) {\n            searchable = true \n          }\n        }\n        if (searchable) {\n            return true \n        } else {\n            return false\n        }\n        }\n      })\n\n    } else {\n      setCanFetch(true)\n      return posts \n    }\n    // apply search \n    // console.log(tempposts)\n    // return tempposts \n  }\n\n  const clearSearchBar = () => {\n    setSearchTerms(\"\")\n    setShowSearch(false)\n  }\n\n  const handleAddAfterSearch = () => {\n    setSearchTerms(\"\")\n    setShowSearch(false)\n  }\n\n  return (\n    <Router>\n      <div className=\"App\" >\n        <Header clearSearchBar={clearSearchBar} setShowSearch={setShowSearch} showSearch={showSearch} />\n        {showSearch? \n        <div className={classes.root}>\n          <InputBase\n            classes={styles}\n            placeholder={'Search...'}\n            startAdornment={<Search />}\n            value={searchTerms} \n            onChange={handleSearchChange}\n          />\n        </div>\n        // <div className={classes.root}><TextField  fullWidth value={searchTerms} onChange={handleSearchChange} variant=\"outlined\"/><SearchIcon/></div> \n        : null}\n        <Modal\n          aria-labelledby=\"transition-modal-title\"\n          aria-describedby=\"transition-modal-description\"\n          className={classes.modal}\n          open={open}\n          onClose={handleClose}\n          closeAfterTransition\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 500,\n          }}\n        >\n          <Fade in={open}>\n            <div className={classes.paper} onClick={handleClose} >\n              <h2 id=\"transition-modal-title\">Welcome to @ANON</h2>\n              <p id=\"transition-modal-description\">Where you can post and react anonymously</p>\n              <p id=\"transition-modal-description\">If you double click/tap on a post you can add tags</p>\n\n            </div>\n          </Fade>\n        </Modal>\n        <Route \n          exact\n          path='/(|atanon)' \n          render={(props) => {\n            return (\n              <PostContainer {...props} \n                posts={filteredPosts()} \n                fetchMorePosts={fetchMorePosts}\n                addReaction={addReaction}\n                addTagToPost={addTagToPost}\n                canFetch={canFetch}\n                setSearchTerms={setSearchTerms}\n                setShowSearch={setShowSearch}\n              />\n            )}}\n        />\n        <Route \n          exact path='/atanon/post' \n          render={(props) => {\n            return (\n              <NewPost {...props} \n                addPostToFrontOfArray={addPostToFrontOfArray}\n              /> \n            )\n          }}\n        />\n        <Fab onClick={handleAddAfterSearch} classes={chubbyStyles}  aria-label=\"add\" className={classes.fabButton}>\n          <NavLink exact to=\"/atanon/post\" style={{ textDecoration: 'inherit', color: 'inherit'}} > \n            <AddIcon  /> \n          </NavLink>\n        </Fab>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}